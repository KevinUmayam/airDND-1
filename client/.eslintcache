[{"/Users/owner/Desktop/airDND-1/client/src/index.js":"1","/Users/owner/Desktop/airDND-1/client/src/App.js":"2","/Users/owner/Desktop/airDND-1/client/src/reportWebVitals.js":"3","/Users/owner/Desktop/airDND-1/client/src/pages/Login.js":"4","/Users/owner/Desktop/airDND-1/client/src/pages/Signup.js":"5","/Users/owner/Desktop/airDND-1/client/src/pages/Home.js":"6","/Users/owner/Desktop/airDND-1/client/src/pages/Profile.js":"7","/Users/owner/Desktop/airDND-1/client/src/pages/SingleMeetup.js":"8","/Users/owner/Desktop/airDND-1/client/src/components/Header/index.js":"9","/Users/owner/Desktop/airDND-1/client/src/utils/auth.js":"10","/Users/owner/Desktop/airDND-1/client/src/utils/queries.js":"11","/Users/owner/Desktop/airDND-1/client/src/utils/mutations.js":"12","/Users/owner/Desktop/airDND-1/client/src/components/CommentForm/index.js":"13","/Users/owner/Desktop/airDND-1/client/src/components/CharForm/index.js":"14","/Users/owner/Desktop/airDND-1/client/src/components/CharCard/index.js":"15","/Users/owner/Desktop/airDND-1/client/src/components/MeetuptList/index.js":"16","/Users/owner/Desktop/airDND-1/client/src/components/MeetupForm/index.js":"17","/Users/owner/Desktop/airDND-1/client/src/components/MapComponent/index.js":"18","/Users/owner/Desktop/airDND-1/client/src/components/CommentList/index.js":"19"},{"size":500,"mtime":1676411993400,"results":"20","hashOfConfig":"21"},{"size":1992,"mtime":1676413268781,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1676411993400,"results":"23","hashOfConfig":"21"},{"size":2615,"mtime":1676413212947,"results":"24","hashOfConfig":"21"},{"size":2661,"mtime":1676411993400,"results":"25","hashOfConfig":"21"},{"size":854,"mtime":1676411993400,"results":"26","hashOfConfig":"21"},{"size":4241,"mtime":1676411993400,"results":"27","hashOfConfig":"21"},{"size":3655,"mtime":1676411993400,"results":"28","hashOfConfig":"21"},{"size":1580,"mtime":1676413245212,"results":"29","hashOfConfig":"21"},{"size":1043,"mtime":1676411993400,"results":"30","hashOfConfig":"21"},{"size":2792,"mtime":1676411993400,"results":"31","hashOfConfig":"21"},{"size":2827,"mtime":1676411993400,"results":"32","hashOfConfig":"21"},{"size":2466,"mtime":1676411993392,"results":"33","hashOfConfig":"21"},{"size":10967,"mtime":1676411993392,"results":"34","hashOfConfig":"21"},{"size":1215,"mtime":1676411993392,"results":"35","hashOfConfig":"21"},{"size":1832,"mtime":1676411993399,"results":"36","hashOfConfig":"21"},{"size":6415,"mtime":1676411993399,"results":"37","hashOfConfig":"21"},{"size":1002,"mtime":1676411993399,"results":"38","hashOfConfig":"21"},{"size":1186,"mtime":1676411993392,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i2oopd",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/owner/Desktop/airDND-1/client/src/index.js",[],"/Users/owner/Desktop/airDND-1/client/src/App.js",[],"/Users/owner/Desktop/airDND-1/client/src/reportWebVitals.js",[],"/Users/owner/Desktop/airDND-1/client/src/pages/Login.js",[],"/Users/owner/Desktop/airDND-1/client/src/pages/Signup.js",[],"/Users/owner/Desktop/airDND-1/client/src/pages/Home.js",[],"/Users/owner/Desktop/airDND-1/client/src/pages/Profile.js",["84","85","86"],"import React, { useState } from \"react\";\nimport { json, Navigate, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport CharForm from \"../components/CharForm\";\nimport CharCard from \"../components/CharCard\";\nimport MeetupForm from \"../components/MeetupForm\";\nimport MeetuptList from \"../components/MeetuptList\";\nimport { QUERY_USER, QUERY_ME } from \"../utils/queries\";\n\nimport Auth from \"../utils/auth\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nconst Profile = () => {\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n\n  console.log(user);\n  // navigate to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Navigate to=\"/me\" />;\n  } \n\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam)\n\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n var testData = JSON.stringify(user.charForms);\n console.log(\"test\" + testData);\n  console.log(\"test1\" + user.charForms);\n\n if (user.charForms.length === 0) {\n   return (\n    <div>\n      <div className=\"flex-row justify-center mb-3\">\n        {/* CharForm */}\n        <div className=\"column\">\n           <div className={userParam ? \"hidden\" : \"display\" }>\n            <CharForm />\n          </div>\n          <br />\n        </div>\n        {/* CharForm */}\n        <h2 className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\n          Viewing {userParam ? `${user.username}'s` : \"your\"} profile.\n        </h2>\n\n        <div className=\"col-12 col-md-10 mb-5\">\n          <MeetuptList\n            meetups={user.meetups}\n            title={`${user.username}'s meetups...`}\n            showTitle={false}\n            showUsername={false}\n          />\n        </div>\n        {!userParam && (\n          <div\n            className=\"col-12 col-md-10 mb-3 p-3\"\n            style={{ border: \"1px dotted #1a1a1a\" }}\n          >\n            <MeetupForm />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n }\n\n  return (\n    <div>\n      <div className=\"flex-row justify-center mb-3\">\n        {/* CharForm */}\n        <div className=\"column\">\n           <div className={userParam ? \"hidden\" : \"display\" }>\n            <CharForm />\n          </div>\n\n          <CharCard \n          charFormD={user.charForms}\n          name={user.charForms[user.charForms.length - 1].name}\n          level={user.charForms[user.charForms.length - 1].level}\n          race={user.charForms[user.charForms.length - 1].race}\n          charClass={user.charForms[user.charForms.length - 1].charClass}\n          alignment={user.charForms[user.charForms.length - 1].alignment}\n          experience={user.charForms[user.charForms.length - 1].experience}\n          strength={user.charForms[user.charForms.length - 1].strength}\n          dexterity={user.charForms[user.charForms.length - 1].dexterity}\n          constitution={user.charForms[user.charForms.length - 1].constitution}\n          intelligence={user.charForms[user.charForms.length - 1].intelligence}\n          wisdom={user.charForms[user.charForms.length - 1].wisdom}\n          charisma={user.charForms[user.charForms.length - 1].charisma}\n          />\n          <br />\n        </div>\n        {/* CharForm */}\n        <h2 className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\n          Viewing {userParam ? `${user.username}'s` : \"your\"} profile.\n        </h2>\n\n        <div className=\"col-12 col-md-10 mb-5\">\n          <MeetuptList\n            meetups={user.meetups}\n            title={`${user.username}'s meetups...`}\n            showTitle={false}\n            showUsername={false}\n          />\n        </div>\n        {!userParam && (\n          <div\n            className=\"col-12 col-md-10 mb-3 p-3\"\n            style={{ border: \"1px dotted #1a1a1a\" }}\n          >\n            <MeetupForm />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;","/Users/owner/Desktop/airDND-1/client/src/pages/SingleMeetup.js",["87","88"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n// Import the `useParams()` hook\nimport { useParams } from \"react-router-dom\";\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\n\nimport CommentList from \"../components/CommentList\";\nimport CommentForm from \"../components/CommentForm\";\n\nimport { QUERY_SINGLE_MEETUP } from \"../utils/queries\";\n//import { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport MapComponent from \"../components/MapComponent\";\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyDydXgSD9aepywJ9KlnLI_iHZJkNpUm84M\");\n\nconst SingleMeetup = () => {\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\n  const { meetupId } = useParams();\n  const [lat, setLat] = useState(32.71500);\n  const [lng, setLng] = useState(-117.16250);\n  const { loading, data } = useQuery(QUERY_SINGLE_MEETUP, {\n    // pass URL parameter\n    variables: { meetupId: meetupId },\n  });\n\n  const meetup = data?.meetup || {};\n\n  useEffect(() => {\n    if(meetup.meetupAddress){\n      Geocode.fromAddress(meetup.meetupAddress).then(\n        (response) => {\n          const { lat, lng } = response.results[0].geometry.location;\n          setLat(lat);\n          setLng(lng);\n          console.log(response);\n          console.log(lat, lng);\n        }\n      )\n    }\n  }, [data]);\n  \n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n\n    <div className=\"my-5\">\n      <div style={{\n        background: \"rgb(149,0,0,100)\",\n        textAlign: \"center\",\n        fontSize: \".5rem\",\n        borderRadius: \" 25px 25px 0px 0px\",\n        boxShadow: \"10px 10px 10px rgba(30,30,30,.5)\"\n      }}>\n        <h3 className=\"card-header  py-5 m-0\" style={{ fontSize: '25px', color: \"white\", }}>\n          <span>\n            {/* added profile link */}\n            <Link className=\"text-light\" to={`/profiles/${meetup.host}`}>{meetup.host}</Link> posted this quest {meetup.meetupCreatedAt}\n           </span>\n        </h3>\n      </div>\n      <div className=\"main py-1\" style={{\n        background: \"rgb(41,42,45)\",\n        borderRadius: \"0px 0px 25px 25px\",\n        boxShadow: \"10px 10px 10px rgba(30,30,30,.5)\",\n        border: \"2px solid black\",\n\n\n      }}>\n\n\n        <blockquote\n          className=\"p-4\"\n          style={{\n            fontSize: '1.5rem',\n            fontStyle: 'italic',\n            color: \"white\",\n            background: \"rgb(149,0,0,100)\",\n            lineHeight: '1.5',\n            borderRadius: \" 15px 15px 15px 15px\",\n            border: \"2px solid white\",\n\n          }}\n        >\n          <p>{meetup.campaignDescription}</p>\n          <p>{meetup.dateTime} ({meetup.campaignDuration})</p>\n          <p>{meetup.meetupAddress} <span>Party Size: {meetup.campaignPartySize}</span></p>\n\n        </blockquote>\n\n        <div className=\"overflow-auto\">\n          <div className=\"my-5\">\n            <CommentList comments={meetup.comments} />\n          </div>\n          <div className=\"m-3 p-4\">\n            <CommentForm meetupId={meetup._id} />\n          </div>\n          <MapComponent\n            isMarkerShown\n            googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDydXgSD9aepywJ9KlnLI_iHZJkNpUm84M&v=3.exp&libraries=geometry,drawing,places\"\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: `400px` }} />}\n            mapElement={<div style={{ height: `100%` }} />}\n            passedlat={lat}\n            passedlng={lng}\n          />\n          <div id=\"map\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SingleMeetup;\n","/Users/owner/Desktop/airDND-1/client/src/components/Header/index.js",["89"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Auth from '../../utils/auth';\n\nconst styles = {\n  TextB: {\n    borderRadius: \"0px\",\n    backgroundColor: \"transparent\",\n  },\n  ulS: {\n    padding: \"0px\",\n  },\n};\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"bg-primary text-light mb-4 py-3 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <div>\n          <Link className=\"text-light\" to=\"/\">\n\n            <h1 className=\"m-0\">airDnD</h1>\n          </Link>\n          <p className=\"m-0\">Where Fantasy and Reality Collide</p>\n\n        </div>\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/me\">\n                {Auth.getProfile().data.username}'s profile\n              </Link>\n              <button className=\"btn btn-lg btn-light ml-2\" onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <div className='flex'>\n              <div\n                className=\"linkBtnS mgR bgG\"\n              ><Link className=\"link\" to=\"/login\">\n                  Log-in\n                </Link></div>\n\n              <div\n                className=\"linkBtnS bgT\"\n              ><Link className=\"link\" to=\"/signup\">\n                  Signup\n                </Link></div>\n            </div>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","/Users/owner/Desktop/airDND-1/client/src/utils/auth.js",[],"/Users/owner/Desktop/airDND-1/client/src/utils/queries.js",[],"/Users/owner/Desktop/airDND-1/client/src/utils/mutations.js",[],"/Users/owner/Desktop/airDND-1/client/src/components/CommentForm/index.js",["90","91","92"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { ADD_COMMENT } from \"../../utils/mutations\";\n\nimport Auth from \"../../utils/auth\";\n\nconst CommentForm = ({ meetupId }) => {\n  const [commentText, setCommentText] = useState(\"\");\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          meetupId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === \"commentText\" && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4 className='text-light' style={{textAlign: \"center\"}}>What are your meetups on this meetup?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          {/* <p\n            className={`m-0 ${\n              characterCount === 280 || error ? \"text-danger\" : \"\"\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p> */}\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your meetups. Please{\" \"}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","/Users/owner/Desktop/airDND-1/client/src/components/CharForm/index.js",["93","94","95","96","97"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\n \nimport { ADD_CHARACTER } from \"../../utils/mutations\";\n// import { QUERY_CHARACTER, QUERY_ME } from \"../../utils/queries\";\nimport Auth from \"../../utils/auth\";\nimport { useForm } from \"react-hook-form\"\n \nconst CharForm = () => {\n \n const {\n   register,\n   watch,\n   reset,\n   handleSubmit,\n   setError,\n   formState: { errors, isSubmitting, isValid, isDirty }\n } = useForm({\n   // defaultValues: {\n   //   name: \"\",\n   //   level: 0,\n   //   race: \"\",\n   //   charClass: \"\",\n   //   alignment: \"\",\n   //   experience: 0,\n   //   // stats\n   //   strength: 0,\n   //   dexterity: 0,\n   //   constitution: 0,\n   //   intelligence: 0,\n   //   wisdom: 0,\n   //   charisma: 0,\n   // },\n   mode: \"onChange\"\n });\n // const onSubmit = data => console.log(data);\n \n const [charFormData, setcharFormData] = useState({\n   name: \"\",\n   level: 0,\n   race: \"\",\n   charClass: \"\",\n   alignment: \"\",\n   experience: 0,\n   // stats\n   strength: 0,\n   dexterity: 0,\n   constitution: 0,\n   intelligence: 0,\n   wisdom: 0,\n   charisma: 0,\n });\n const [addCharForm, { error }] = useMutation(ADD_CHARACTER);\n \n if (error) throw error;\n \n const handleInputChange = (event) => {\n   const { name, value } = event.target;\n   setcharFormData({ ...charFormData, [name]: parseInt(value) || value });\n   console.log(charFormData);\n };\n \n const handleFormSubmit = async (event) => {\n   // event.preventDefault();\n   // handleSubmit(onSubmit);\n   try {\n     addCharForm({\n       variables: {\n         ...charFormData,\n       },\n \n     });\n \n     // console.log(data);\n     console.log(\"line 73\" + charFormData);\n \n   } catch (err) {\n     console.error(err);\n   }\n   setcharFormData({\n     ...charFormData\n   });\n \n };\n \n \n \n const checkV = function () {\n   if (errors) {\n     return true\n   }\n   return false\n }\n return (\n   <div>\n     {Auth.loggedIn() ? (\n       <form onSubmit={handleFormSubmit}>\n         <div className=\"form-group\">\n           <label htmlFor=\"formGroupExampleInput\">Name: </label>\n           <input\n             // type=\"text\"\n             // value={charFormData.name}\n             {...register('name', {\n               required: true,\n             })}\n             className=\"form-control\"\n             id=\"formGroupExampleInput\"\n             placeholder=\"Character Name\"\n             name=\"name\"\n             onChange={handleInputChange}\n           />\n           {errors.name?.type === \"required\" && (<p className=\"errorText\">name is required</p>)}\n         </div>\n         <div className=\"form-group\">\n           <label htmlFor=\"formGroupExampleInput2\">Level: </label>\n           <input\n             // type=\"number\"\n             //  value={charFormData.level}\n             {...register('level', {\n               required: true,\n               pattern: { value: /^[0-9]*$/ },\n             })}\n             className=\"form-control\"\n             id=\"formGroupExampleInput2\"\n             placeholder=\"Level\"\n             name=\"level\"\n             onChange={handleInputChange}\n           />\n           {errors.level?.type === \"required\" && (<p className=\"errorText\">level is required</p>)}\n           {/* {errors.level?.type === \"pattern\" && (<p className=\"errorText\">only numbers are allowed</p>)} */}\n         </div>\n         <div className=\"form-group\">\n           <label htmlFor=\"formGroupExampleInput\">Race: </label>\n           <input\n \n             // type=\"text\"\n             // style={\n             //    {...register('race', {\n             //   required: true,\n             //   pattern: {value: /[A-Za-z]/},\n             // })}\n             // }\n            \n \n             //  value={charFormData.race}\n             {...register('race', {\n               required: true,\n             })}\n             className=\"form-control\"\n             id=\"formGroupExampleInput\"\n             placeholder=\"Race\"\n             name=\"race\"\n             onChange={handleInputChange}\n           />\n           {errors.race?.type === \"required\" && (<p className=\"errorText\">race is required</p>)}\n         </div>\n         <div className=\"form-group\">\n           <label htmlFor=\"formGroupExampleInput\">Class: </label>\n           <input\n             type=\"list\"\n             {...register('class', {\n               required: true,\n             })}\n             list=\"classes\"\n             //  value={charFormData.charClass}\n             className=\"form-control\"\n             id=\"className\"\n             placeholder=\"Class\"\n             name=\"charClass\"\n             onChange={handleInputChange}\n           />\n           {errors.race?.type === \"required\" && (<p className=\"errorText\">race is required</p>)}\n           <datalist id=\"classes\">\n             <option value=\"barbarian\" />\n             <option value=\"bard\" />\n             <option value=\"cleric\" />\n             <option value=\"druid\" />\n             <option value=\"fighter\" />\n             <option value=\"monk\" />\n             <option value=\"paladin\" />\n             <option value=\"ranger\" />\n             <option value=\"rogue\" />\n             <option value=\"sorcerer\" />\n             <option value=\"warlock\" />\n             <option value=\"wizard\" />\n             <option value=\"artificer\" />\n           </datalist>\n         </div>\n         <div className=\"form-group\">\n           <label htmlFor=\"formGroupExampleInput\">Alignment: </label>\n           <input\n \n            //  type=\"text\"\n             {...register('alignment', {\n               required: true,\n             })}\n \n             //  value={charFormData.alignment}\n             className=\"form-control\"\n             id=\"formGroupExampleInput\"\n             placeholder=\"Alignment\"\n             name=\"alignment\"\n             onChange={handleInputChange}\n           />\n           {errors.alignment?.type === \"required\" && (<p className=\"errorText\">alignment is required</p>)}\n         </div>\n         <div className=\"form-group\">\n           <label htmlFor=\"formGroupExampleInput2\">XP: </label>\n           <input\n \n             type=\"number\"\n             {...register('experience', {\n               required: true,\n             })}\n \n             //  value={charFormData.experience}\n             className=\"form-control\"\n             id=\"formGroupExampleInput2\"\n             placeholder=\"Experience\"\n             name=\"experience\"\n             onChange={handleInputChange}\n           />\n           {errors.experience?.type === \"required\" && (<p className=\"errorText\">experience is required</p>)}\n         </div>\n         {/* main stats */}\n         <div className=\"form-group\">\n           <label htmlFor=\"formGroupExampleInput2\">Strength: </label>\n           <input\n \n             type=\"number\"\n             {...register('strength', {\n               required: true,\n             })}\n \n             //  value={charFormData.strength}\n             className=\"form-control\"\n             id=\"formGroupExampleInput2\"\n             placeholder=\"Strength\"\n             name=\"strength\"\n             onChange={handleInputChange}\n           />\n           {errors.strength?.type === \"required\" && (<p className=\"errorText\">strength is required</p>)}\n         </div>\n         <div className=\"form-group\">\n           <label htmlFor=\"formGroupExampleInput2\">Dexterity: </label>\n           <input\n \n             type=\"number\"\n             {...register('dexterity', {\n               required: true,\n             })}\n \n             //  value={charFormData.dexterity}\n             className=\"form-control\"\n             id=\"formGroupExampleInput2\"\n             placeholder=\"Dexterity\"\n             name=\"dexterity\"\n             onChange={handleInputChange}\n           />\n           {errors.dexterity?.type === \"required\" && (<p className=\"errorText\">dexterity is required</p>)}\n         </div>\n         <div className=\"form-group\">\n           <label htmlFor=\"formGroupExampleInput2\">Constitution: </label>\n           <input\n \n             type=\"number\"\n             {...register('constitution', {\n               required: true,\n             })}\n \n             //  value={charFormData.constitution}\n             className=\"form-control\"\n             id=\"formGroupExampleInput2\"\n             placeholder=\"Constitution\"\n             name=\"constitution\"\n             onChange={handleInputChange}\n           />\n           {errors.constitution?.type === \"required\" && (<p className=\"errorText\">constitution is required</p>)}\n         </div>\n         <div className=\"form-group\">\n           <label htmlFor=\"formGroupExampleInput2\">Intelligence: </label>\n           <input\n \n             type=\"number\"\n             {...register('intelligence', {\n               required: true,\n             })}\n \n             //  value={charFormData.intelligence}\n             className=\"form-control\"\n             id=\"formGroupExampleInput2\"\n             placeholder=\"Intelligence\"\n             name=\"intelligence\"\n             onChange={handleInputChange}\n           />\n           {errors.intelligence?.type === \"required\" && (<p className=\"errorText\">intelligence is required</p>)}\n         </div>\n         <div className=\"form-group\">\n           <label htmlFor=\"formGroupExampleInput2\">Wisdom: </label>\n           <input\n             type=\"number\"\n             //  value={charFormData.wisdom}\n             {...register('wisdom', {\n               required: true,\n             })}\n             className=\"form-control\"\n             id=\"formGroupExampleInput2\"\n             placeholder=\"Wisdom\"\n             name=\"wisdom\"\n             onChange={handleInputChange}\n           />\n           {errors.wisdom?.type === \"required\" && (<p className=\"errorText\">wisdom is required</p>)}\n         </div>\n         <div className=\"form-group\">\n           <label htmlFor=\"formGroupExampleInput2\">Charisma: </label>\n           <input\n \n             type=\"number\"\n             {...register('charisma', {\n               required: true,\n             })}\n             placeholder=\"Charisma\"\n \n             //  value={charFormData.charisma}\n             className=\"form-control\"\n             id=\"formGroupExampleInput2\"\n             name=\"charisma\"\n             onChange={handleInputChange}\n           />\n           {errors.charisma?.type === \"required\" && (<p className=\"errorText\">charisma is required</p>)}\n         </div>\n \n         <button\n \n           //  disabled={!isValid}\n           onClick={() => setError('charisma', {\n             types: {\n               test1: \"test\"\n             }\n           })}\n           disabled={\n             !isDirty && !isValid\n           }\n           className=\"btn btn-block btn-primary\"\n \n           style={{ cursor: \"pointer\" }}\n           type=\"submit\"\n         >\n           Create Character\n         </button>\n \n       </form>\n     ) : (\n       <p>\n         You need to be logged to see or create character. Please{\" \"}\n         <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n       </p>\n     )\n     }\n   </div >\n );\n};\nexport default CharForm;\n","/Users/owner/Desktop/airDND-1/client/src/components/CharCard/index.js",[],"/Users/owner/Desktop/airDND-1/client/src/components/MeetuptList/index.js",[],"/Users/owner/Desktop/airDND-1/client/src/components/MeetupForm/index.js",["98"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { ADD_MEETUP } from \"../../utils/mutations\";\nimport { QUERY_MEETUPS, QUERY_ME } from \"../../utils/queries\";\n\nimport Auth from \"../../utils/auth\";\n\n// creating the meetup form\nconst MeetupForm = () => {\n  const [ formState , setFormState ] = useState({\n    dateTime: \"\",\n    campaignName: \"\",\n    campaignDescription: \"\",\n    campaignDuration: \"\",\n    campaignPartySize: \"\",\n    meetupAddress: \"\",\n    meetupCreatedAt: \"\",\n});\n// character count \n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addMeetup, { error }] = useMutation(ADD_MEETUP, {\n    update(cache, data, addMeetup) {\n      try {\n        const { meetups } = cache.readQuery({ query: QUERY_MEETUPS });\n\n        cache.writeQuery({\n          query: QUERY_MEETUPS,\n          data: { meetups: [addMeetup, ...meetups] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      try {\n        const { me } = cache.readQuery({ query: QUERY_ME });\n        cache.writeQuery({\n          query: QUERY_ME,\n          data: { me: { ...me, meetups: [ ...me.meetups, addMeetup] } },\n      });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'campaignName' && value.length <= 280) {\n      setFormState({ ...formState, [name]: value });\n      setCharacterCount(value.length);\n    } else if (name !== 'campaignName') {\n      setFormState({ ...formState, [name]: value});\n    }\n    console.log(formState);\n  };\n// submission of form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addMeetup({\n        variables: { ...formState, \n          host: Auth.getProfile().data.username,\n        },\n      });\n\n      setFormState({\n        dateTime: 0,\n        campaignName: \"\",\n        campaignDescription: \"\",\n        campaignDuration: \"\",\n        campaignPartySize: 0,\n        meetupAddress: \"\",\n        meetupCreatedAt: 0,\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Add your campaign</h3>\n      <p>Looking to slay dragons or stop the Necromancer? Add to the bulletin board and seek out other heroes yearning for adventure!</p>\n\n      {Auth.loggedIn() ? (\n        <>\n          {/* campaignName div */}\n            <p\n            className={`m-0 ${\n              characterCount === 280 || error ? \"text-danger\" : \"\"\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            {/* what is the date/time */}\n            <div className=\"col-12 col-lg-9\">\n            <h6>Date/Time of Event:</h6>\n              <textarea\n                name=\"dateTime\"\n                placeholder=\"MM/DD/YYYY HH:mm AM\"\n                value={formState.dateTime}\n                className=\"form-input w-100\"\n                style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n            {/* campaignName */}\n            <div className=\"col-12 col-lg-9\">\n              <h6>Campaign Name:</h6>\n              <textarea\n              name=\"campaignName\"\n              placeholder=\"i.e. Tales From The Yawning Portal.\"\n              value={formState.campaignName}\n              className=\"form-input w-100\"\n              style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n              onChange={handleChange}\n              ></textarea>\n            </div>\n            {/* campaignDescription div */}\n            <div className=\"col-12 col-lg-9\">\n              <h6>Description:</h6>\n              <textarea\n                name=\"campaignDescription\"\n                placeholder=\"Brief description of the campaign.\"\n                value={formState.campaignDescription}\n                className=\"form-input w-100\"\n                style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n            {/* campaignDuration */}\n            <div className=\"col-12 col-lg-9\">\n              <h6>How long is the campaign?</h6>\n              <textarea\n                name=\"campaignDuration\"\n                placeholder=\"Minutes, Hours, Days, Weeks?\"\n                value={formState.campaignDuration}\n                className=\"form-input w-100\"\n                style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n            {/* campaignPartySize */}\n            <div className=\"col-12 col-lg-9\">\n              <h6>Preferred Party Size:</h6>\n              <textarea\n                name=\"campaignPartySize\"\n                placeholder=\"How many in your party?\"\n                value={formState.campaignPartySize}\n                className=\"form-input w-100\"\n                style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n            {/* meetupAddress */}\n            <div className=\"col-12 col-lg-9\">\n              <h6>Rendezvous Address</h6>\n              <textarea\n                name=\"meetupAddress\"\n                placeholder=\"Address\"\n                value={formState.meetupAddress}\n                className=\"form-input w-100\"\n                style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n            <br></br>\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-info btn-block py-3\" type=\"submit\">\n                Create Meetup\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to create your Meetup. Please{\" \"}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default MeetupForm;\n","/Users/owner/Desktop/airDND-1/client/src/components/MapComponent/index.js",[],"/Users/owner/Desktop/airDND-1/client/src/components/CommentList/index.js",[],{"ruleId":"99","severity":1,"message":"100","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"103","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":14},{"ruleId":"99","severity":1,"message":"104","line":11,"column":10,"nodeType":"101","messageId":"102","endLine":11,"endColumn":20},{"ruleId":"99","severity":1,"message":"105","line":5,"column":20,"nodeType":"101","messageId":"102","endLine":5,"endColumn":34},{"ruleId":"106","severity":1,"message":"107","line":40,"column":6,"nodeType":"108","endLine":40,"endColumn":12,"suggestions":"109"},{"ruleId":"99","severity":1,"message":"110","line":5,"column":7,"nodeType":"101","messageId":"102","endLine":5,"endColumn":13},{"ruleId":"99","severity":1,"message":"111","line":11,"column":10,"nodeType":"101","messageId":"102","endLine":11,"endColumn":24},{"ruleId":"99","severity":1,"message":"112","line":13,"column":24,"nodeType":"101","messageId":"102","endLine":13,"endColumn":29},{"ruleId":"99","severity":1,"message":"113","line":19,"column":15,"nodeType":"101","messageId":"102","endLine":19,"endColumn":19},{"ruleId":"99","severity":1,"message":"114","line":14,"column":4,"nodeType":"101","messageId":"102","endLine":14,"endColumn":9},{"ruleId":"99","severity":1,"message":"115","line":15,"column":4,"nodeType":"101","messageId":"102","endLine":15,"endColumn":9},{"ruleId":"99","severity":1,"message":"116","line":16,"column":4,"nodeType":"101","messageId":"102","endLine":16,"endColumn":16},{"ruleId":"99","severity":1,"message":"117","line":18,"column":25,"nodeType":"101","messageId":"102","endLine":18,"endColumn":37},{"ruleId":"99","severity":1,"message":"118","line":89,"column":8,"nodeType":"101","messageId":"102","endLine":89,"endColumn":14},{"ruleId":"99","severity":1,"message":"113","line":65,"column":15,"nodeType":"101","messageId":"102","endLine":65,"endColumn":19},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'json' is defined but never used.","'setContext' is defined but never used.","'useReactiveVar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'meetup.meetupAddress'. Either include it or remove the dependency array.","ArrayExpression",["119"],"'styles' is assigned a value but never used.","'characterCount' is assigned a value but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'watch' is assigned a value but never used.","'reset' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'checkV' is assigned a value but never used.",{"desc":"120","fix":"121"},"Update the dependencies array to be: [data, meetup.meetupAddress]",{"range":"122","text":"123"},[1377,1383],"[data, meetup.meetupAddress]"]