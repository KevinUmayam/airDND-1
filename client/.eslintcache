[{"/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/index.js":"1","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/App.js":"2","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/reportWebVitals.js":"3","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/pages/Signup.js":"4","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/pages/Profile.js":"5","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/pages/Login.js":"6","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/pages/SingleThought.js":"7","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/pages/Home.js":"8","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/components/Header/index.js":"9","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/components/Footer/index.js":"10","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/utils/auth.js":"11","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/utils/mutations.js":"12","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/utils/queries.js":"13","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/components/ThoughtForm/index.js":"14","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/components/ThoughtList/index.js":"15","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/components/CharForm/index.js":"16","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/components/CharCard/index.js":"17","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/components/CommentForm/index.js":"18","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/components/CommentList/index.js":"19"},{"size":500,"mtime":1668664495886,"results":"20","hashOfConfig":"21"},{"size":2059,"mtime":1668904084764,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1668664495887,"results":"23","hashOfConfig":"21"},{"size":2658,"mtime":1668904809295,"results":"24","hashOfConfig":"21"},{"size":1979,"mtime":1669060236936,"results":"25","hashOfConfig":"21"},{"size":2562,"mtime":1669090873521,"results":"26","hashOfConfig":"21"},{"size":1562,"mtime":1669083795575,"results":"27","hashOfConfig":"21"},{"size":907,"mtime":1669083795574,"results":"28","hashOfConfig":"21"},{"size":1322,"mtime":1668664495885,"results":"29","hashOfConfig":"21"},{"size":1598,"mtime":1669083896443,"results":"30","hashOfConfig":"21"},{"size":1043,"mtime":1668664495887,"results":"31","hashOfConfig":"21"},{"size":1909,"mtime":1669091125327,"results":"32","hashOfConfig":"21"},{"size":1256,"mtime":1669001491119,"results":"33","hashOfConfig":"21"},{"size":3080,"mtime":1668664495885,"results":"34","hashOfConfig":"21"},{"size":1502,"mtime":1668664495886,"results":"35","hashOfConfig":"21"},{"size":6467,"mtime":1669083229688,"results":"36","hashOfConfig":"21"},{"size":864,"mtime":1669060001160,"results":"37","hashOfConfig":"21"},{"size":2410,"mtime":1668664495885,"results":"38","hashOfConfig":"21"},{"size":953,"mtime":1668664495885,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1w86754",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/index.js",[],["83","84"],"/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/App.js",[],"/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/reportWebVitals.js",[],"/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/pages/Signup.js",[],"/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/pages/Profile.js",[],"/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/pages/Login.js",[],"/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/pages/SingleThought.js",[],"/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/pages/Home.js",[],"/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/components/Header/index.js",[],"/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/components/Footer/index.js",[],"/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/utils/auth.js",[],"/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/utils/mutations.js",[],"/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/utils/queries.js",[],"/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/components/ThoughtForm/index.js",["85"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your techy mind?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/components/ThoughtList/index.js",[],"/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/components/CharForm/index.js",["86","87","88","89"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { ADD_CHARACTER } from \"../../utils/mutations\";\nimport { QUERY_THOUGHTS, QUERY_ME } from \"../../utils/queries\";\nimport Auth from \"../../utils/auth\";\n\nconst CharForm = () => {\n  const [charFormData, setcharFormData] = useState({\n    name: \"\",\n    level: 0,\n    race: \"\",\n    class: \"\",\n    alignment: \"\",\n    experience: 0,\n    // stats\n    strength: 0,\n    dexterity: 0,\n    constitution: 0,\n    intelligence: 0,\n    wisdom: 0,\n    charisma: 0,\n  });\n  const [addCharacter, { error }] = useMutation(ADD_CHARACTER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setcharFormData({ ...charFormData, [name]: value });\n    console.log(charFormData);\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addCharacter({\n        variables: {\n          ...charFormData,\n        },\n      });\n\n      setcharFormData({\n        name: \"\",\n        level: 0,\n        race: \"\",\n        class: \"\",\n        alignment: \"\",\n        experience: 0,\n        // stats\n        strength: 0,\n        dexterity: 0,\n        constitution: 0,\n        intelligence: 0,\n        wisdom: 0,\n        charisma: 0,\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      {Auth.loggedIn() ? (\n        <form onSubmit={handleFormSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"formGroupExampleInput\">Name:</label>\n            <input\n              type=\"text\"\n              value={charFormData.name}\n              className=\"form-control\"\n              id=\"formGroupExampleInput\"\n              placeholder=\"Character Name\"\n              name=\"name\"\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"formGroupExampleInput2\">LEVEL:</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput2\"\n              placeholder=\"Level\"\n              name=\"level\"\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"formGroupExampleInput\">RACE:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput\"\n              placeholder=\"Race\"\n              name=\"race\"\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"formGroupExampleInput\">class:</label>\n            <input\n              type=\"list\"\n              className=\"form-control\"\n              id=\"className\"\n              placeholder=\"class\"\n              name=\"class\"\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"formGroupExampleInput\">ALIGNMENT:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput\"\n              placeholder=\"Alignment\"\n              name=\"alignment\"\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"formGroupExampleInput2\">EXP:</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput2\"\n              placeholder=\"Experience\"\n              name=\"experience\"\n              onChange={handleInputChange}\n            />\n          </div>\n          {/* main stats */}\n          <div className=\"form-group\">\n            <label htmlFor=\"formGroupExampleInput2\">Str:</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput2\"\n              placeholder=\"Strength\"\n              name=\"strength\"\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"formGroupExampleInput2\">Dex:</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput2\"\n              placeholder=\"Dexterity\"\n              name=\"dexterity\"\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"formGroupExampleInput2\">Con:</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput2\"\n              placeholder=\"Constitution\"\n              name=\"constitution\"\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"formGroupExampleInput2\">Int:</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput2\"\n              placeholder=\"Intelligence\"\n              name=\"intelligence\"\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"formGroupExampleInput2\">Wis:</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput2\"\n              placeholder=\"Wisdom\"\n              name=\"wisdom\"\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"formGroupExampleInput2\">Char:</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput2\"\n              placeholder=\"Charisma\"\n              name=\"charisma\"\n              onChange={handleInputChange}\n            />\n          </div>\n          <button\n            className=\"btn btn-block btn-primary\"\n            style={{ cursor: \"pointer\" }}\n            type=\"submit\"\n          >\n            Create\n          </button>\n        </form>\n      ) : (\n        <p>\n          You need to be logged to see or create character. Please{\" \"}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\nexport default CharForm;\n","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/components/CharCard/index.js",["90"],"import React, { useState } from \"react\";\nimport \"./index.css\";\n\nconst CharCard = () => {\n  return (\n    <div>\n      <div className=\"wizard\">\n        <div className=\" textBox\">\n          <div>\n            <h4 className=\"classT\">class</h4>\n            <p>name:</p>\n            <p>lvl.</p>\n            <p>race</p>\n            <p>alignment</p>\n            <p>experience</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"statbox\">\n        <div className=\"statLine\">\n          <p className=\"statText\">STR:</p>\n          <p className=\"statText\">DEX:</p>\n          <p className=\"statText\">CON:</p>\n        </div>\n        <div className=\"statLine\">\n          <p className=\"statText\">INT:</p>\n          <p className=\"statText\">WIS:</p>\n          <p className=\"statText\">CHA:</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CharCard;\n","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/components/CommentForm/index.js",["91"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","/Users/owner/Desktop/Bootcamp/Projects/airDND/client/src/components/CommentList/index.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":41,"column":15,"nodeType":"98","messageId":"99","endLine":41,"endColumn":19},{"ruleId":"96","severity":1,"message":"100","line":6,"column":10,"nodeType":"98","messageId":"99","endLine":6,"endColumn":24},{"ruleId":"96","severity":1,"message":"101","line":6,"column":26,"nodeType":"98","messageId":"99","endLine":6,"endColumn":34},{"ruleId":"96","severity":1,"message":"102","line":25,"column":26,"nodeType":"98","messageId":"99","endLine":25,"endColumn":31},{"ruleId":"96","severity":1,"message":"97","line":37,"column":15,"nodeType":"98","messageId":"99","endLine":37,"endColumn":19},{"ruleId":"96","severity":1,"message":"103","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"96","severity":1,"message":"97","line":19,"column":15,"nodeType":"98","messageId":"99","endLine":19,"endColumn":19},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'QUERY_THOUGHTS' is defined but never used.","'QUERY_ME' is defined but never used.","'error' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]